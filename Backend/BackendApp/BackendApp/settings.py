"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
from . import logs

# Create global Instance of Log
global logger
logger = logs.log()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent
#logger.print(f"BASE_DIR = '{BASE_DIR}'")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-nma=xi6x2p-crjg^ifqqkapyu1qjd0l=+wn)-rijk_o%$!k3w_"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
}

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "api",
    "mail",
    'rest_framework',
    "corsheaders",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'django.middleware.csrf.CsrfViewMiddleware',
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

# hier caps rein gehauen
ROOT_URLCONF = "BackendApp.urls"

print("suub dir")
print(os.path.join(BASE_DIR, 'CustomData'))
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR,'CustomData'),  # Template-Verzeichnis hinzufügen
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# BackendApp is Casesensitive
WSGI_APPLICATION = "BackendApp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
     "default": {
         "ENGINE": "django.db.backends.postgresql",
         "NAME": "DoRun",
         "USER": "admin",
         "PASSWORD": "SupersicheresPasswort!1",
        #  "PASSWORD": "ZyZLeG331Bqfoo9ClIQD", 
         "HOST": "localhost",
         "PORT": "5432",
     }
    #"default": {
    #        "ENGINE": "django.db.backends.sqlite3",
    #        "NAME": BASE_DIR / "db.sqlite3",
    #}
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CSRF-Konfiguration
CSRF_COOKIE_SAMESITE = 'None'  # Für Cookies nötig
CSRF_COOKIE_SECURE = True  # Lokal sollte Secure=False sein
#CSRF_COOKIE_HTTPONLY = False  # JS braucht Zugriff auf den Cookie
CSRF_TRUSTED_ORIGINS = [
    'https://localhost:3000',
    'https://localhost:8000',
    'https://127.0.0.1:3000',
    'https://127.0.0.1:8000',
]
#CSRF_COOKIE_DOMAIN = [
#    'http://localhost:3000',
#    'http://localhost:8000',
#    'http://127.0.0.1:3000',
#    'http://127.0.0.1:8000',
#]  # Entfernen, da du lokal testest

#CORS_ALLOW_ALL_ORIGINS = False  # Sicherer Ansatz
CORS_ORIGIN_ALLOW_ALL=True
CORS_ALLOWED_ORIGINS = [
    'https://localhost:3000',
    'https://localhost:8000',
    'https://127.0.0.1:3000',
    'https://127.0.0.1:8000',
]
CORS_ALLOW_CREDENTIALS = True  # Für Cookies nötig